services: 
  go-gin-db:
    image: postgres:latest
    container_name: go-gin-boilerplate-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - go-gin-network
  
  go-gin-redis:
    image: redis:latest
    container_name: go-gin-boilerplate-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - go-gin-network
  
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: go-gin-boilerplate-keycloak
    command: ["start-dev"]
    env_file:
      - .env
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://go-gin-db:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HEALTH_ENABLED: "true"
    ports:
      - "${KEYCLOAK_PORT}:8080"
    depends_on:
      go-gin-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - go-gin-network

networks:
  go-gin-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local